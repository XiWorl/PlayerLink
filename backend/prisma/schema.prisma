generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AccountType {
  player
  team
}

enum ApplicationStatus {
  pending
  accepted
  rejected
}

model Account {
  id Int @id @default(autoincrement())
  createdAt  DateTime @default(now())
  accountType AccountType
  email String @unique
  player Player?
  team  Team?
  playerApplications Application[] @relation("PlayerApplications")
  teamApplications Application[] @relation("TeamApplications")
}

model Player {
  playerId  Int @id @default(autoincrement())
  firstName String
  lastName  String?
  yearsOfExperience String
  location    String
  willingToRelocate Boolean
  bio         String?
  about      String?
  accountId  Int @unique
  account     Account @relation(fields: [accountId], references: [id])
}

model Team {
  teamId     Int @id @default(autoincrement())
  name       String
  location   String
  currentlyHiring Boolean
  yearEstablished String
  description String?
  overview   String?
  accountId  Int @unique
  account     Account @relation(fields: [accountId], references: [id])
}

model Application {
  applicationId Int @id @default(autoincrement())
  createdAt  DateTime @default(now())
  playerAccountId  Int
  teamAccountId     Int
  status     ApplicationStatus @default(pending)
  playerAccount     Account @relation(fields: [playerAccountId], references: [id], name: "PlayerApplications")
  teamAccount      Account @relation(fields: [teamAccountId], references: [id], name: "TeamApplications")

  @@unique([playerAccountId, teamAccountId])
}
